import{_ as a,o as t,c as e,R as i,a6 as l,a7 as r,a8 as s,a9 as o}from"./chunks/framework.djJUHdSG.js";const f=JSON.parse('{"title":"传输安全","description":"","frontmatter":{},"headers":[],"relativePath":"web/https.md","filePath":"web/https.md","lastUpdated":1683282608000}'),h={name:"web/https.md"},_=i('<h1 id="传输安全" tabindex="-1">传输安全 <a class="header-anchor" href="#传输安全" aria-label="Permalink to &quot;传输安全&quot;">​</a></h1><h2 id="http传输窃听" tabindex="-1">HTTP传输窃听 <a class="header-anchor" href="#http传输窃听" aria-label="Permalink to &quot;HTTP传输窃听&quot;">​</a></h2><p>由于HTTP是明文传输的，原本的请求不会做加密变换直接发送到服务器中，服务器的返回也是明文返回到浏览器。 <img src="'+l+'" alt=""></p><h2 id="http窃听" tabindex="-1">HTTP窃听 <a class="header-anchor" href="#http窃听" aria-label="Permalink to &quot;HTTP窃听&quot;">​</a></h2><p>传输过程中的数据会被其他人看到，意味着网络传输中的设备可以看到用户的密码，窃听传输敏感信息，非法获取个人资料等。 <img src="'+r+'" alt=""></p><h2 id="http篡改" tabindex="-1">HTTP篡改 <a class="header-anchor" href="#http篡改" aria-label="Permalink to &quot;HTTP篡改&quot;">​</a></h2><p><img src="'+s+'" alt=""></p><ul><li>插入广告</li><li>重定向网站</li><li>无法防御的XSS和CSRF攻击</li></ul><h2 id="如何确定服务器身份" tabindex="-1">如何确定服务器身份 <a class="header-anchor" href="#如何确定服务器身份" aria-label="Permalink to &quot;如何确定服务器身份&quot;">​</a></h2><p><img src="'+o+'" alt=""></p><ul><li>证书无法伪造</li><li>证书的私钥不被泄露</li><li>域名管理权不泄露</li><li>CA坚守原则，他一定会做验证域名</li></ul>',11),p=[_];function c(n,d,m,T,u,P){return t(),e("div",null,p)}const q=a(h,[["render",c]]);export{f as __pageData,q as default};
